<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.QuestionMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.Question" >
    <id column="questionID" property="questionID" jdbcType="INTEGER" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="choiceA" property="choiceA" jdbcType="VARCHAR" />
    <result column="choiceB" property="choiceB" jdbcType="VARCHAR" />
    <result column="choiceC" property="choiceC" jdbcType="VARCHAR" />
    <result column="choiceD" property="choiceD" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="typeID" property="typeID" jdbcType="CHAR" />
    <result column="courseID" property="courseID" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    questionID, subject, choiceA, choiceB, choiceC, choiceD, answer, typeID, courseID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pojo.QuestionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from question
    where questionID = #{questionID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from question
    where questionID = #{questionID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pojo.QuestionExample" >
    delete from question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pojo.Question" >
    insert into question (questionID, subject, choiceA, 
      choiceB, choiceC, choiceD, 
      answer, typeID, courseID)
    values (#{questionID,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, #{choiceA,jdbcType=VARCHAR}, 
      #{choiceB,jdbcType=VARCHAR}, #{choiceC,jdbcType=VARCHAR}, #{choiceD,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{typeID,jdbcType=CHAR}, #{courseID,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Question" >
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="questionID != null" >
        questionID,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="choiceA != null" >
        choiceA,
      </if>
      <if test="choiceB != null" >
        choiceB,
      </if>
      <if test="choiceC != null" >
        choiceC,
      </if>
      <if test="choiceD != null" >
        choiceD,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="typeID != null" >
        typeID,
      </if>
      <if test="courseID != null" >
        courseID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="questionID != null" >
        #{questionID,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="choiceA != null" >
        #{choiceA,jdbcType=VARCHAR},
      </if>
      <if test="choiceB != null" >
        #{choiceB,jdbcType=VARCHAR},
      </if>
      <if test="choiceC != null" >
        #{choiceC,jdbcType=VARCHAR},
      </if>
      <if test="choiceD != null" >
        #{choiceD,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="typeID != null" >
        #{typeID,jdbcType=CHAR},
      </if>
      <if test="courseID != null" >
        #{courseID,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pojo.QuestionExample" resultType="java.lang.Integer" >
    select count(*) from question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update question
    <set >
      <if test="record.questionID != null" >
        questionID = #{record.questionID,jdbcType=INTEGER},
      </if>
      <if test="record.subject != null" >
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.choiceA != null" >
        choiceA = #{record.choiceA,jdbcType=VARCHAR},
      </if>
      <if test="record.choiceB != null" >
        choiceB = #{record.choiceB,jdbcType=VARCHAR},
      </if>
      <if test="record.choiceC != null" >
        choiceC = #{record.choiceC,jdbcType=VARCHAR},
      </if>
      <if test="record.choiceD != null" >
        choiceD = #{record.choiceD,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null" >
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.typeID != null" >
        typeID = #{record.typeID,jdbcType=CHAR},
      </if>
      <if test="record.courseID != null" >
        courseID = #{record.courseID,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update question
    set questionID = #{record.questionID,jdbcType=INTEGER},
      subject = #{record.subject,jdbcType=VARCHAR},
      choiceA = #{record.choiceA,jdbcType=VARCHAR},
      choiceB = #{record.choiceB,jdbcType=VARCHAR},
      choiceC = #{record.choiceC,jdbcType=VARCHAR},
      choiceD = #{record.choiceD,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      typeID = #{record.typeID,jdbcType=CHAR},
      courseID = #{record.courseID,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.Question" >
    update question
    <set >
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="choiceA != null" >
        choiceA = #{choiceA,jdbcType=VARCHAR},
      </if>
      <if test="choiceB != null" >
        choiceB = #{choiceB,jdbcType=VARCHAR},
      </if>
      <if test="choiceC != null" >
        choiceC = #{choiceC,jdbcType=VARCHAR},
      </if>
      <if test="choiceD != null" >
        choiceD = #{choiceD,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="typeID != null" >
        typeID = #{typeID,jdbcType=CHAR},
      </if>
      <if test="courseID != null" >
        courseID = #{courseID,jdbcType=CHAR},
      </if>
    </set>
    where questionID = #{questionID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.Question" >
    update question
    set subject = #{subject,jdbcType=VARCHAR},
      choiceA = #{choiceA,jdbcType=VARCHAR},
      choiceB = #{choiceB,jdbcType=VARCHAR},
      choiceC = #{choiceC,jdbcType=VARCHAR},
      choiceD = #{choiceD,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      typeID = #{typeID,jdbcType=CHAR},
      courseID = #{courseID,jdbcType=CHAR}
    where questionID = #{questionID,jdbcType=INTEGER}
  </update>
  
  <select id="DuobiaoqueryByQuestionId" parameterType="java.lang.Integer" resultType="com.pojo.Question">
  	select questionID, subject, choiceA, choiceB, choiceC, choiceD, answer, typeID, question.courseID,courseName from question,course where question.courseID=course.courseid and questionID=#{questionID} 
  </select>
  
  <select id="queryByLikeBychoice" parameterType="java.lang.String" resultType="com.pojo.Question">
  	 SELECT questionID,subject,choiceA,choiceB,choiceC,choiceD,answer,typeID,courseID FROM question where choiceA like #{choice} or choiceB like #{choice} or choiceC like #{choice} or choiceD like #{choice}  
  </select>
  
  <select id="queryByLikeBypage" parameterType="java.lang.Integer" resultType="com.pojo.Question">
  	SELECT questionID,subject,choiceA,choiceB,choiceC,choiceD,answer FROM question limit 5 offset #{page} 
  </select>
  
  <select id="queryByLikeByall"  resultType="com.pojo.Question">
  	SELECT questionID,subject,choiceA,choiceB,choiceC,choiceD,answer,typeID,courseID FROM question where choiceA like #{keyword} or choiceB like #{keyword} or choiceC like #{keyword} or choiceD like #{keyword} limit 7 offset #{pageNO}
              
  </select>
  
  <select id="getTotalPage" resultType="java.lang.Integer">
  	SELECT count(*) FROM question
  </select>
  
  <select id="getTotalPageBychoice" parameterType="java.lang.String" resultType="java.lang.Integer">
  	SELECT count(*) FROM question where choiceA like #{choice} or choiceB like #{choice} or choiceC like #{choice} or choiceD like #{choice}
  </select>
  
  <select id="queryByShijuan" parameterType="java.util.List" resultType="com.pojo.Question">
  	SELECT questionID,subject,choiceA,choiceB,choiceC,choiceD,answer,typeID,courseID FROM question   

  	where questionID in 
  	<foreach item="choice" collection="list" open="(" separator="," close=")">  
	   #{choice}
    </foreach>
    
  </select>
  
</mapper>